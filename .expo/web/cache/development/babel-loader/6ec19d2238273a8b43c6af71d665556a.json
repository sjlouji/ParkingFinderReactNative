{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/joan/Documents/Drive/Projects/Doctsapp/Docs/Pages/Notofication/NotificationScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AlertIOS from \"react-native-web/dist/exports/AlertIOS\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Container, Header, Left, Body, Right, Button, Icon, Title, Item, Input, View } from 'native-base';\nimport Notifications from \"../../Demo/Notification.json\";\nimport { ScrollView, FlatList } from 'react-native-gesture-handler';\nimport { Avatar } from 'react-native-elements';\nimport { not } from 'react-native-reanimated';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar NotificationScreen = function (_Component) {\n  _inherits(NotificationScreen, _Component);\n\n  var _super = _createSuper(NotificationScreen);\n\n  function NotificationScreen(props) {\n    var _this;\n\n    _classCallCheck(this, NotificationScreen);\n\n    _this = _super.call(this, props);\n\n    _this.renderSeparator = function () {\n      return React.createElement(View, {\n        style: {\n          height: 1,\n          width: \"86%\",\n          backgroundColor: \"#CED0CE\",\n          marginLeft: \"14%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      });\n    };\n\n    _this.state = {\n      refreshing: false\n    };\n    return _this;\n  }\n\n  _createClass(NotificationScreen, [{\n    key: \"onRefresh\",\n    value: function onRefresh() {\n      console.log('make ur api call');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        style: {\n          height: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }\n      }, React.createElement(FlatList, {\n        style: {\n          height: 0\n        },\n        data: Notifications,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item,\n              index = _ref.index;\n          return React.createElement(NotificationItem, {\n            notify: item,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }\n          });\n        },\n        refreshControl: React.createElement(RefreshControl, {\n          refreshing: this.state.refreshing,\n          onRefresh: this.onRefresh.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return NotificationScreen;\n}(Component);\n\nexport { NotificationScreen as default };\n\nvar NotificationItem = function NotificationItem(_ref2) {\n  var notify = _ref2.notify;\n  return React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return ToastAndroid.show(notify.title, ToastAndroid.LONG);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingTop: 10,\n      paddingRight: 60,\n      elevation: 1,\n      width: width,\n      height: 80\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, React.createElement(Container, {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      paddingTop: 20,\n      paddingLeft: 15,\n      paddingRight: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, React.createElement(Avatar, {\n    rounded: true,\n    size: \"medium\",\n    source: {\n      uri: notify.avatar\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: {\n      marginLeft: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'justify',\n      fontWeight: 'bold',\n      color: '#696969'\n    },\n    numberOfLines: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, notify.notiName), React.createElement(Text, {\n    style: {\n      textAlign: 'justify'\n    },\n    numberOfLines: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, notify.title)))));\n};","map":{"version":3,"sources":["/Users/joan/Documents/Drive/Projects/Doctsapp/Docs/Pages/Notofication/NotificationScreen.js"],"names":["React","Component","Container","Header","Left","Body","Right","Button","Icon","Title","Item","Input","View","Notifications","ScrollView","FlatList","Avatar","not","Dimensions","get","width","height","NotificationScreen","props","renderSeparator","backgroundColor","marginLeft","state","refreshing","console","log","item","index","onRefresh","bind","NotificationItem","notify","ToastAndroid","show","title","LONG","paddingTop","paddingRight","elevation","display","flexDirection","justifyContent","paddingLeft","uri","avatar","textAlign","fontWeight","color","notiName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Text,StyleSheet, TouchableOpacity, ToastAndroid, Platform, AlertIOS, RefreshControl, Alert } from 'react-native';\nimport { Container, Header, Left, Body, Right, Button, Icon, Title, Item, Input, View } from 'native-base';\nimport Notifications from '../../Demo/Notification.json';\nimport { ScrollView, FlatList } from 'react-native-gesture-handler';\nimport { Avatar } from 'react-native-elements';\nimport { not } from 'react-native-reanimated';\nimport { ActivityIndicator, Dimensions } from 'react-native';\n\n\nvar {width, height} = Dimensions.get('window');\n\nexport default class NotificationScreen extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = { refreshing: false };\n    }\n\n    onRefresh() {\n        console.log('make ur api call');\n      }\n\n      renderSeparator = () => {\n        return (\n          <View\n            style={{\n              height: 1,\n              width: \"86%\",\n              backgroundColor: \"#CED0CE\",\n              marginLeft: \"14%\"\n            }}\n          />\n        );\n      };\n\n  render() {\n    return (\n      <Container style={{height: 0 }}>\n          <FlatList \n          style={{ height: 0 }}\n            data={Notifications}\n            renderItem={({ item, index }) =>\n                <NotificationItem notify={item} />\n            }\n            refreshControl={\n                <RefreshControl\n                  //refresh control used for the Pull to Refresh\n                  refreshing={this.state.refreshing}\n                  onRefresh={this.onRefresh.bind(this)}\n                />\n              }\n          />\n      </Container>\n    );\n  }\n}\n\nconst NotificationItem = ({notify}) => {\n    return (\n        <TouchableOpacity onPress={()=> \n            ToastAndroid.show(notify.title, ToastAndroid.LONG)\n        }>\n        <View style={{paddingTop: 10, paddingRight: 60 ,elevation: 1, width: width,  height: 80}}>\n            <Container style={{ display: 'flex', flexDirection: 'row', justifyContent :'flex-start', paddingTop:20, paddingLeft: 15, paddingRight: 15}}>\n                <View style={{ }}>\n                    <Avatar\n                        rounded\n                        size='medium'\n                        source={{\n                            uri:\n                            notify.avatar,\n                        }}\n                    />\n                </View>\n                <View style={{  marginLeft: 20 }}>\n                    <Text style={{  textAlign: 'justify', fontWeight: 'bold', color: '#696969'}} numberOfLines={1}>\n                        {notify.notiName}\n                    </Text>\n                    <Text style={{  textAlign: 'justify'}} numberOfLines={1}>\n                        {notify.title}\n                    </Text>\n                </View>\n            </Container>\n        </View>\n        </TouchableOpacity>\n    )\n  }\n"]},"metadata":{},"sourceType":"module"}