{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/joan/Documents/Drive/Projects/Doctsapp/Docs/Pages/Home/HomeScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Container, Header, Left, Body, Right, Button, Icon, Title, Item, Input } from 'native-base';\nimport { Avatar, Image } from 'react-native-elements';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Divider } from 'react-native-paper';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport { TouchableHighlight, TouchableNativeFeedback, FlatList } from 'react-native-gesture-handler';\nimport Feeds from \"../../Demo/Home.json\";\nimport Moment from 'moment';\nimport ImageView from \"react-native-image-viewing\";\nimport FBCollage from 'react-native-fb-collage';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar HomeScreen = function (_Component) {\n  _inherits(HomeScreen, _Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen(props) {\n    var _this;\n\n    _classCallCheck(this, HomeScreen);\n\n    _this = _super.call(this, props);\n\n    _this.searchPage = function () {\n      ToastAndroid.show(\"initial\", ToastAndroid.SHORT);\n    };\n\n    _this.renderSeparator = function () {\n      return React.createElement(View, {\n        style: {\n          height: 1,\n          width: \"86%\",\n          backgroundColor: \"#CED0CE\",\n          marginLeft: \"14%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      });\n    };\n\n    _this.state = {\n      refreshing: false\n    };\n    Moment.locale('en');\n    _this.state = {\n      visible: false,\n      setIsVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"onRefresh\",\n    value: function onRefresh() {\n      console.log('make ur api call');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }\n      }, React.createElement(FlatList, {\n        style: {\n          height: 'auto'\n        },\n        data: Feeds,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item,\n              index = _ref.index;\n          return React.createElement(FeedItem, {\n            feed: item,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }\n          });\n        },\n        refreshControl: React.createElement(RefreshControl, {\n          refreshing: this.state.refreshing,\n          onRefresh: this.onRefresh.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return HomeScreen;\n}(Component);\n\nexport { HomeScreen as default };\n\nvar FeedItem = function FeedItem(_ref2) {\n  var feed = _ref2.feed;\n  return React.createElement(View, {\n    style: {\n      paddingTop: 10,\n      elevation: 1,\n      width: width,\n      flex: 1,\n      flexDirection: 'column',\n      backgroundColor: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      height: 90,\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, React.createElement(Container, {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      paddingTop: 20,\n      paddingLeft: 15,\n      paddingRight: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, React.createElement(Avatar, {\n    rounded: true,\n    size: \"medium\",\n    source: {\n      uri: feed.userId.profileImage\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: {\n      marginLeft: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'justify',\n      fontWeight: 'bold',\n      color: '#08070D'\n    },\n    numberOfLines: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, feed.userId.first_name), React.createElement(Text, {\n    style: {\n      textAlign: 'justify',\n      fontSize: 12\n    },\n    numberOfLines: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, feed.userId.tagline), React.createElement(Text, {\n    style: {\n      textAlign: 'justify',\n      fontSize: 12,\n      color: 'grey'\n    },\n    numberOfLines: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, Moment(feed.published_at).fromNow())))), feed.post_descripltion !== \"\" ? React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return ToastAndroid.show(feed.title, ToastAndroid.LONG);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      height: 100\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, React.createElement(Container, {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      paddingTop: 0,\n      paddingLeft: 10,\n      paddingRight: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: {\n      marginLeft: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'auto',\n      fontSize: 13\n    },\n    numberOfLines: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 23\n    }\n  }, feed.post_descripltion), feed.post_descripltion != \"\" ? React.createElement(Text, {\n    style: {\n      color: 'blue'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 23\n    }\n  }, \"View More\") : React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 23\n    }\n  }))))) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }), feed.image_post === 'true' ? React.createElement(View, {\n    style: {\n      height: 300,\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, React.createElement(FBCollage, {\n    resizeMode: \"cover\",\n    style: {\n      height: '100%',\n      width: '100%'\n    },\n    images: [\"https://media.geeksforgeeks.org/wp-content/cdn-uploads/20190626123927/untitlsssssed.png\"],\n    imageOnPress: function imageOnPress(index, images) {\n      ToastAndroid.show(index.toString(), ToastAndroid.LONG);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  })) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    padding: 0\n  },\n  textColor: {\n    color: 'black'\n  }\n});","map":{"version":3,"sources":["/Users/joan/Documents/Drive/Projects/Doctsapp/Docs/Pages/Home/HomeScreen.js"],"names":["React","Component","Container","Header","Left","Body","Right","Button","Icon","Title","Item","Input","Avatar","Image","Divider","MaterialCommunityIcons","FontAwesome","TouchableHighlight","TouchableNativeFeedback","FlatList","Feeds","Moment","ImageView","FBCollage","Dimensions","get","width","height","HomeScreen","props","searchPage","ToastAndroid","show","SHORT","renderSeparator","backgroundColor","marginLeft","state","refreshing","locale","visible","setIsVisible","console","log","item","index","onRefresh","bind","FeedItem","feed","paddingTop","elevation","flex","flexDirection","display","justifyContent","paddingLeft","paddingRight","uri","userId","profileImage","textAlign","fontWeight","color","first_name","fontSize","tagline","published_at","fromNow","post_descripltion","title","LONG","image_post","images","toString","styles","StyleSheet","create","container","padding","textColor"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;AAEA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,IAA5B,EAAkCC,IAAlC,EAAwCC,KAAxC,EAA+CC,MAA/C,EAAuDC,IAAvD,EAA6DC,KAA7D,EAAoEC,IAApE,EAA0EC,KAA1E,QAAuF,aAAvF;AACA,SAASC,MAAT,EAAkBC,KAAlB,QAA+B,uBAA/B;;;AAEA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,sBAAP;AACA,OAAOC,WAAP;AACA,SAASC,kBAAT,EAA6BC,uBAA7B,EAAsDC,QAAtD,QAAsE,8BAAtE;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;sBAEsBC,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAjBC,K,mBAAAA,K;IAAOC,M,mBAAAA,M;;IAGSC,U;;;;;AAEjB,sBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,8BAAMA,KAAN;;AADgB,UAWlBC,UAXkB,GAWL,YAAM;AACjBC,MAAAA,YAAY,CAACC,IAAb,CAAkB,SAAlB,EAA6BD,YAAY,CAACE,KAA1C;AACD,KAbiB;;AAAA,UAmBlBC,eAnBkB,GAmBA,YAAM;AACtB,aACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLP,UAAAA,MAAM,EAAE,CADH;AAELD,UAAAA,KAAK,EAAE,KAFF;AAGLS,UAAAA,eAAe,EAAE,SAHZ;AAILC,UAAAA,UAAU,EAAE;AAJP,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD,KA9BiB;;AAEhB,UAAKC,KAAL,GAAa;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAb;AACAjB,IAAAA,MAAM,CAACkB,MAAP,CAAc,IAAd;AACA,UAAKF,KAAL,GAAW;AACTG,MAAAA,OAAO,EAAG,KADD;AAETC,MAAAA,YAAY,EAAG;AAFN,KAAX;AAJgB;AAQjB;;;;gCAOW;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD;;;6BAeM;AACP,aACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,KAAK,EAAE;AAAEhB,UAAAA,MAAM,EAAE;AAAV,SADT;AAEI,QAAA,IAAI,EAAEP,KAFV;AAGI,QAAA,UAAU,EAAE;AAAA,cAAGwB,IAAH,QAAGA,IAAH;AAAA,cAASC,KAAT,QAASA,KAAT;AAAA,iBACV,oBAAC,QAAD;AAAU,YAAA,IAAI,EAAED,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADU;AAAA,SAHhB;AAMI,QAAA,cAAc,EACV,oBAAC,cAAD;AAEE,UAAA,UAAU,EAAE,KAAKP,KAAL,CAAWC,UAFzB;AAGE,UAAA,SAAS,EAAE,KAAKQ,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAkBD;;;;EArDqC9C,S;;SAAnB2B,U;;AA2DrB,IAAMoB,QAAQ,GAAG,SAAXA,QAAW,QAAY;AAAA,MAAVC,IAAU,SAAVA,IAAU;AAG3B,SAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAE,EAAb;AAAiBC,MAAAA,SAAS,EAAE,CAA5B;AAA+BzB,MAAAA,KAAK,EAAEA,KAAtC;AAA8C0B,MAAAA,IAAI,EAAE,CAApD;AAAuDC,MAAAA,aAAa,EAAE,QAAtE;AAAgFlB,MAAAA,eAAe,EAAE;AAAjG,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAER,MAAAA,MAAM,EAAE,EAAV;AAAcyB,MAAAA,IAAI,EAAE;AAApB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEE,MAAAA,OAAO,EAAE,MAAX;AAAmBD,MAAAA,aAAa,EAAE,KAAlC;AAAyCE,MAAAA,cAAc,EAAE,YAAzD;AAAuEL,MAAAA,UAAU,EAAC,EAAlF;AAAsFM,MAAAA,WAAW,EAAE,EAAnG;AAAuGC,MAAAA,YAAY,EAAE;AAArH,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,OAAO,MADX;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,MAAM,EAAE;AACJC,MAAAA,GAAG,EACHT,IAAI,CAACU,MAAL,CAAYC;AAFR,KAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAWI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAGxB,MAAAA,UAAU,EAAE;AAAf,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAGyB,MAAAA,SAAS,EAAE,SAAd;AAAyBC,MAAAA,UAAU,EAAE,MAArC;AAA6CC,MAAAA,KAAK,EAAE;AAApD,KAAb;AAA6E,IAAA,aAAa,EAAE,CAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKd,IAAI,CAACU,MAAL,CAAYK,UADjB,CADJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAGH,MAAAA,SAAS,EAAE,SAAd;AAAyBI,MAAAA,QAAQ,EAAE;AAAnC,KAAb;AAAqD,IAAA,aAAa,EAAE,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhB,IAAI,CAACU,MAAL,CAAYO,OADjB,CAJJ,EAOI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAGL,MAAAA,SAAS,EAAE,SAAd;AAAyBI,MAAAA,QAAQ,EAAE,EAAnC;AAAuCF,MAAAA,KAAK,EAAE;AAA9C,KAAb;AAAoE,IAAA,aAAa,EAAE,CAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK1C,MAAM,CAAC4B,IAAI,CAACkB,YAAN,CAAN,CAA0BC,OAA1B,EADL,CAPJ,CAXJ,CADF,CADJ,EA4BGnB,IAAI,CAACoB,iBAAL,KAAyB,EAAzB,GAED,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aACzBtC,YAAY,CAACC,IAAb,CAAkBiB,IAAI,CAACqB,KAAvB,EAA8BvC,YAAY,CAACwC,IAA3C,CADyB;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE5C,MAAAA,MAAM,EAAE;AAAV,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAE2B,MAAAA,OAAO,EAAE,MAAX;AAAmBD,MAAAA,aAAa,EAAE,KAAlC;AAAyCE,MAAAA,cAAc,EAAE,YAAzD;AAAuEL,MAAAA,UAAU,EAAC,CAAlF;AAAqFM,MAAAA,WAAW,EAAE,EAAlG;AAAsGC,MAAAA,YAAY,EAAC;AAAnH,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAGrB,MAAAA,UAAU,EAAE;AAAf,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAGyB,MAAAA,SAAS,EAAE,MAAd;AAAsBI,MAAAA,QAAQ,EAAE;AAAhC,KAAb;AAAqD,IAAA,aAAa,EAAE,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhB,IAAI,CAACoB,iBADV,CADJ,EAIKpB,IAAI,CAACoB,iBAAL,IAAwB,EAAxB,GACD,oBAAC,IAAD;AAAO,IAAA,KAAK,EAAE;AAAEN,MAAAA,KAAK,EAAE;AAAT,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADC,GAGD,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ,CADF,CAJJ,CAFC,GAsBD,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlDF,EAqDGd,IAAI,CAACuB,UAAL,KAAoB,MAApB,GAED,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE7C,MAAAA,MAAM,EAAE,GAAV;AAAeyB,MAAAA,IAAI,EAAE,CAArB;AAAwBG,MAAAA,cAAc,EAAE;AAAxC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AACQ,IAAA,UAAU,EAAC,OADnB;AAEQ,IAAA,KAAK,EAAE;AAAE5B,MAAAA,MAAM,EAAE,MAAV;AAAkBD,MAAAA,KAAK,EAAE;AAAzB,KAFf;AAGY,IAAA,MAAM,EAAE,CACN,yFADM,CAHpB;AAMM,IAAA,YAAY,EAAE,sBAACmB,KAAD,EAAO4B,MAAP,EAAkB;AAC9B1C,MAAAA,YAAY,CAACC,IAAb,CAAkBa,KAAK,CAAC6B,QAAN,EAAlB,EAAmC3C,YAAY,CAACwC,IAAhD;AACD,KARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAFC,GAeD,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApEF,CAFJ;AA0ED,CA7ED;;AAkFA,IAAMI,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE;AADA,GADkB;AAI7BC,EAAAA,SAAS,EAAE;AACPjB,IAAAA,KAAK,EAAE;AADA;AAJkB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, TouchableOpacity, ToastAndroid, Platform, RefreshControl, View, Text } from 'react-native';\nimport { Container, Header, Left, Body, Right, Button, Icon, Title, Item, Input } from 'native-base';\nimport { Avatar,  Image } from 'react-native-elements';\nimport { ActivityIndicator, Dimensions } from 'react-native';\nimport { Divider } from 'react-native-paper';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\nimport { TouchableHighlight, TouchableNativeFeedback, FlatList } from 'react-native-gesture-handler';\nimport Feeds from '../../Demo/Home.json';\nimport Moment from 'moment';\nimport ImageView from \"react-native-image-viewing\";\nimport FBCollage from 'react-native-fb-collage';\n\nvar {width, height} = Dimensions.get('window');\n\n\nexport default class HomeScreen extends Component {\n\n    constructor(props){\n      super(props);\n      this.state = { refreshing: false };\n      Moment.locale('en');\n      this.state={\n        visible : false,\n        setIsVisible : false\n      };\n    }\n    \n\n    searchPage = () => {\n      ToastAndroid.show(\"initial\", ToastAndroid.SHORT)\n    }\n\n    onRefresh() {\n      console.log('make ur api call');\n    }\n\n    renderSeparator = () => {\n      return (\n        <View\n          style={{\n            height: 1,\n            width: \"86%\",\n            backgroundColor: \"#CED0CE\",\n            marginLeft: \"14%\"\n          }}\n        />\n      );\n    };\n\n  render() {\n    return (\n      <Container>\n        <FlatList \n          style={{ height: 'auto' }}\n            data={Feeds}\n            renderItem={({ item, index }) =>\n              <FeedItem feed={item} />\n            }\n            refreshControl={\n                <RefreshControl\n                  //refresh control used for the Pull to Refresh\n                  refreshing={this.state.refreshing}\n                  onRefresh={this.onRefresh.bind(this)}\n                />\n              }\n          />\n      </Container>\n    )\n  }\n}\n\n\n\n\nconst FeedItem = ({feed}) => {\n\n\n  return (\n\n      <View style={{paddingTop: 10 ,elevation: 1, width: width  ,flex: 1, flexDirection: 'column', backgroundColor: 'white' }} >\n          <View style={{ height: 90, flex: 1 }}>\n            <Container style={{ display: 'flex', flexDirection: 'row', justifyContent :'flex-start', paddingTop:20, paddingLeft: 15, paddingRight: 15}}>\n                <View style={{ }}>\n                    <Avatar\n                        rounded\n                        size='medium'\n                        source={{\n                            uri:\n                            feed.userId.profileImage,\n                        }}\n                    />\n                </View>\n                <View style={{  marginLeft: 20 }}>\n                    <Text style={{  textAlign: 'justify', fontWeight: 'bold', color: '#08070D'}} numberOfLines={1}>\n                        {feed.userId.first_name}\n                    </Text>\n                    <Text style={{  textAlign: 'justify', fontSize: 12}} numberOfLines={1}>\n                        {feed.userId.tagline}\n                    </Text>\n                    <Text style={{  textAlign: 'justify', fontSize: 12, color: 'grey'}} numberOfLines={1}>\n                        {Moment(feed.published_at).fromNow()}\n                    </Text>\n                </View>\n            </Container>\n          </View>\n\n        {/* Validation if the post has description */}\n        {feed.post_descripltion!==\"\"\n        ?\n        <TouchableOpacity onPress={()=> \n          ToastAndroid.show(feed.title, ToastAndroid.LONG)\n          }\n          >\n            <View style={{ height: 100}}>\n              <Container style={{ display: 'flex', flexDirection: 'row', justifyContent :'flex-start', paddingTop:0, paddingLeft: 10, paddingRight:10}}>\n                  <View style={{  marginLeft: 10 }}>\n                      <Text style={{  textAlign: 'auto', fontSize: 13,}}   numberOfLines={4}>\n                          {feed.post_descripltion} \n                      </Text>\n                      {feed.post_descripltion!=\"\"?\n                      <Text  style={{ color: 'blue' }}>View More</Text>\n                      :\n                      <Text></Text>\n                      }\n                  </View>\n              </Container>\n            </View>\n          </TouchableOpacity>\n        :\n        <View></View>\n        }\n        {/* Validation if the post has image */}\n        {feed.image_post === 'true'\n        ?\n        <View style={{ height: 300, flex: 1, justifyContent: \"center\" }}>\n        <FBCollage \n                resizeMode=\"cover\"\n                style={{ height: '100%', width: '100%'}}\n                    images={[\n                      \"https://media.geeksforgeeks.org/wp-content/cdn-uploads/20190626123927/untitlsssssed.png\"\n                    ]}\n              imageOnPress={(index,images) => {\n                ToastAndroid.show(index.toString(),ToastAndroid.LONG)\n              }}\n        />\n        </View>\n        :\n        <View></View>\n        }\n      </View>\n  )\n}\n\n\n\n\nconst styles = StyleSheet.create({\n    container: {\n      padding: 0\n    },\n    textColor: {\n        color: 'black'\n    },\n\n});"]},"metadata":{},"sourceType":"module"}