"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var react_native_1 = require("react-native");
var fb_collage_type_1 = require("./fb-collage.type");
var fb_collage_style_1 = require("./fb-collage.style");
var FBCollage = /** @class */ (function (_super) {
    __extends(FBCollage, _super);
    function FBCollage(props) {
        var _this = _super.call(this, props) || this;
        _this.__renderImage = function (image, index, style, text, blurRadius) {
            var _a = _this.props, images = _a.images, imageOnPress = _a.imageOnPress, resizeMode = _a.resizeMode, textStyleOverride = _a.textStyle, overlayStyleOverride = _a.overlayStyle;
            var source = typeof image === 'string' ? { uri: image } : image;
            return (<react_native_1.TouchableOpacity style={__assign({}, _this.styles.BUTTON, style)} onPress={function () { return imageOnPress && imageOnPress(index, images); }} activeOpacity={0.8} key={"image" + index}>
        <react_native_1.ImageBackground style={_this.styles.FLEX} source={source} resizeMode={resizeMode} blurRadius={blurRadius}>
          {text && (<react_native_1.View style={__assign({}, _this.styles.OVERLAY, overlayStyleOverride)}>
              <react_native_1.Text style={__assign({}, _this.styles.TEXT, textStyleOverride)}>
                {'+' + text}
              </react_native_1.Text>
            </react_native_1.View>)}
        </react_native_1.ImageBackground>
      </react_native_1.TouchableOpacity>);
        };
        _this.__renderImages = function (images) {
            var length = images.length, check = length > 4, childs = check ? images.slice(0, 4) : images, text = check ? (length - 4).toString() : undefined;
            return (<react_native_1.View style={_this.styles.CONTAINER(length)}>
        {childs.map(function (image, index) {
                if (index === 3)
                    return _this.__renderImage(images[3], 4, _this.styles.IMAGE(length), text, text ? 4 : 0);
                else
                    return _this.__renderImage(image, index + 1, _this.styles.IMAGE(length));
            })}
      </react_native_1.View>);
        };
        _this.__renderContent = function (images) {
            return (<>
        <react_native_1.View style={_this.styles.FLEX}>
          {_this.__renderImage(images[0], 0, _this.styles.FLEX)}
        </react_native_1.View>
        {images.length > 1 && _this.__renderImages(images.slice(1))}
      </>);
        };
        _this.styles = fb_collage_style_1.default(props.width, props.height, props.borderRadius, props.spacing);
        return _this;
    }
    FBCollage.prototype.render = function () {
        var _a = this.props, images = _a.images, styleOverride = _a.style;
        return (<react_native_1.View style={__assign({}, this.styles.VIEW, styleOverride)}>
        {this.__renderContent(images)}
      </react_native_1.View>);
    };
    FBCollage.defaultProps = new fb_collage_type_1.Props();
    return FBCollage;
}(React.Component));
exports.default = FBCollage;
//# sourceMappingURL=fb-collage.component.js.map